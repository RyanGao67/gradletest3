// Using this subprojects method for adding common
// configuration for our sub project
subprojects {
    apply plugin: 'java'
   //https://discuss.gradle.org/t/when-should-we-use-java-plugin-and-when-java-library-plugin/25377
    group = 'com.denofprogramming'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
	targetCompatibility = 1.8
    repositories {
        mavenCentral()
    }
}
// Gradle allows us to access any project of a multiproject build from any build script
// the project API itself provides a method called Project which takes a path as an argument
// and returns the project object for the path we provide
// This ability to configure a project build from any build script is called Cross
// project configuration(Gradle implements this which is called configuration injection)

project(':pickerNumberApplication1-complete') {
    dependencies {
        implementation 'org.apache.commons:commons-math3:3.2'
        implementation 'org.apache.logging.log4j:log4j-core:2.5'
        testImplementation  "junit:junit:4.12"
    }
}
project(':plusplus-complete') {
    dependencies {
       implementation project(':randomNumberGen1-complete')
    }
}
project(':randomNumberGen1-complete') {
    // add plugin that support the api scope
	apply plugin: 'java-library'
    // the api dependency to support transitive dependency
    dependencies {
       api 'org.apache.commons:commons-math3:3.2'
       implementation 'org.apache.logging.log4j:log4j-core:2.5'
       testImplementation "junit:junit:4.12"
    }
}


